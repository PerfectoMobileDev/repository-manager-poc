service: serverless-repository-manager

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-offline
  - serverless-plugin-git-variables
provider:
  name: aws
  runtime: nodejs8.10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
      Resource:
        - 'arn:aws:s3:::perfecto-repository-${opt:stage}-${self:custom.region}*'

custom:
  region: ${opt:region, self:provider.region}
  bucketName: perfecto-repository-${opt:stage}-${self:custom.region}

functions:
  getUploadLink:
    # using Git vars here. These are created by the Git plugin. We are using latest tat (git:describe) which is created by Jenkins pipeline.
    description: ${git:describeLight}  (${git:sha1})
    handler: handlers/getUploadLink.handle
    events:
      - http:
          path: uploadlink/{id+}
          method: get
    environment:
      BUCKET_NAME: ${self:custom.bucketName}
    tags: 
      project: architecture
    # Example for using a layer  
    # layers:
    #  - 'arn:aws:lambda:us-east-1:961701920393:layer:keycloakAuth:2'
  getDownloadLink:
    # using Git vars here. These are created by the Git plugin. We are using latest tat (git:describe) which is created by Jenkins pipeline.
    description: ${git:describeLight}  (${git:sha1})
    handler: handlers/getDownloadLink.handle
    events:
      - http:
          path: downloadlink/{id+}
          method: get
    environment:
      BUCKET_NAME: ${self:custom.bucketName}
    tags: 
      project: architecture
