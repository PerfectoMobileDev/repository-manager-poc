Serverless Project Setup - Node with Express

Links
https://serverless.com/blog/serverless-express-rest-api/

Project Setup

mkdir repository-manager && cd repository-manager
npm init -f

Create serverless.yml

Implement handlers

sls deploy

Add package (prod):

npm install <npm package name>

https://mybucket.s3.amazonaws.com/test.jpg?AWSAccessKeyId=AABFBIAWAEAUKAYGAFAA&Expires=1391069292&Signature=u%2BrqUtt3t6BfKHAlbXcZcTJIOWQ%3D

curl -v -T myimage.jpg https://mybucket.s3.amazonaws.com/test.jpg?AWSAccessKeyId=AABFBIAWAEAUKAYGAFAA&Expires=1391069292&Signature=u%2BrqUtt3t6BfKHAlbXcZcTJIOWQ%3D
curl -v -H "image/jpeg" -T myimage.jpg https://mybucket.s3.amazonaws.com/test.jpg?AWSAccessKeyId=AABFBIAWAEAUKAYGAFAA&Content-Type=image%2Fjpeg&Expires=1391068501&Signature=0yF%2BmzDhyU3g2hr%2BfIcVSnE22rY%3D&x-amz-acl=public-read-write

IKMPORTANT: S3 bucket must have the following CORS:

<CORSConfiguration>
  <CORSRule>
    <AllowedOrigin>*</AllowedOrigin>
    <AllowedMethod>GET</AllowedMethod>
    <AllowedMethod>PUT</AllowedMethod>
    <MaxAgeSeconds>3000</MaxAgeSeconds>
    <AllowedHeader>Authorization</AllowedHeader>
  </CORSRule>
</CORSConfiguration>

Also lambda must have the permissions to write to the bucket as described in https://stackoverflow.com/questions/48709277/lambda-pre-signed-url-access-denied

curl -v -H "Content-Type: application/octet-stream" -T /Users/mosheb/Downloads/2018-04-11_12h53_41.png "https://perfecto-repository-dev-us-east-1.s3.amazonaws.com/mynodefolder/myfile?Content-Type=application%2Foctet-stream&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA572PGX2EZFUUEOGY%2F20190113%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20190113T152716Z&X-Amz-Expires=900&X-Amz-Security-Token=FQoGZXIvYXdzEJf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDDhX9ARvrFXhArrGniKMAuF918wBV%2B5e1k5oHlNWMUvMdVQXtfyDrLuBuzJ5qNQfEg1Y0Rpue5mcJz8v04%2FZxZLZshGC7mqmmW7AyG%2B11H76ZFxZiLH5bZPlH7J9YliGYCeWCMwaNyWCJBOxehSZGyZURdQk%2BmPx8JEJiJLbpmyCKDgtI4BgfeFoWK8Zu1lntWUdW8caM9d5j6%2FyJtJjtr%2BYx0E%2BpW8s%2BB5zZ6Dx3JJW3oQ%2Bk41li%2FXJa5y3VkHjyDojl6Rvad6%2FCafb9zD%2BYLwNDWzF%2Ba2%2FoRLkEFphq5NCYgqbZpHd%2FZWsIdRPa71RcpsXuejQaALhtia1KS%2B8US6vRO97bTnfPptVxaTqvVkLywP7LrIPFLCO9nUoy4ft4QU%3D&X-Amz-Signature=402c98cb95726a0d7a4e8d5bb8a64a14d6aeac49d27d54d443e107f3c0a68097&X-Amz-SignedHeaders=host"


Unit tests

Installed Jest:
npm install --save-dev jest

run tests:

./node_modules/.bin/jest

=========================
SAM
=========================
Create S3 bucket for the deployment package (one time)
aws s3 mb s3://perfecto-sam-dev-deployment-packages

Pack and put in S3
sam package     --template-file template.yaml     --output-template-file packaged.yaml     --s3-bucket perfecto-sam-dev-deployment-packages

deploy
sam deploy \
    --template-file packaged.yaml \
    --stack-name repository-manager-sam-dev-us-east-1 \
    --capabilities CAPABILITY_IAM \
    --region us-east-1


test:

https://mctllfjsu4.execute-api.us-east-1.amazonaws.com/stage/uploadlink/samfolder/samobject

Open issues:
1. How to debug tests in Intellij/VSCode?
2. Add CORS and expiration to CloudFormation for bucket
3. Fight cold start: https://serverless.com/blog/keep-your-lambdas-warm/
4. Local lambda run
5. Language - which one?
6. Verdion management - by git tag? Lambda support?
7. Logs.
8. Layers
9. Discovery (Route53? CloudMap?)
10. authentication and autothrization?
11. Metrics (pricing?)
12. Guidelines: When is it recommended (Costs, performance)